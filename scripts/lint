#!/bin/bash
#
# Copyright 2016-2017 the Bayou Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>
#
# Runs the linter over the entire source base.
#

# Set `progName` to the program name, `progDir` to its directory, and `baseDir`
# to `progDir`'s directory. Follows symlinks.
function init-prog {
    local newp p="$0"

    while newp="$(readlink "$p")"; do
        [[ ${newp} =~ ^/ ]] && p="${newp}" || p="$(dirname "$p")/${newp}"
    done

    progName="${p##*/}"
    progDir="$(cd "$(dirname "$p")"; /bin/pwd -P)"
    baseDir="$(cd "${progDir}/.."; /bin/pwd -P)"
}
init-prog


#
# Argument parsing
#

# Error during argument processing?
argError=0

# Need help?
showHelp=0

# Option for the output directory, if any.
outDirOpt=()

# Option for the overlay source directory, if any.
overlayDirOpt=()

# Overlay source directory, if any.
overlayDir=''

while true; do
    case $1 in
        -h|--help)
            showHelp=1
            break
            ;;
        --out=?*)
            outDirOpt=("$1")
            ;;
        --overlay=?*)
            overlayDir="${1#*=}"
            overlayDirOpt=("$1")
            ;;
        --) # End of all options
            shift
            break
            ;;
        -?*)
            echo "Unknown option: $1" 1>&2
            argError=1
            break
            ;;
        *)  # Default case: No more options, break out of the loop.
            break
    esac

    shift
done

args=("$@")
if (( ${#args[@]} == 0 )); then
    args=("${baseDir}")
    if [[ ${overlayDir} != '' ]]; then
        args+=("${overlayDir}")
    fi
fi

if (( ${showHelp} || ${argError} )); then
    echo 'Usage:'
    echo ''
    echo "${progName} [--out=<dir>] [--overlay=<dir>] [--] [<file-or-dir> ...]"
    echo '  Run the linter on the indicated files or directories. With nothing'
    echo '  specified, runs over the entire project (including overlay source'
    echo '  if indicated).'
    echo ''
    echo '  --out=<dir>'
    echo '    Place output (built linter tool) in directory <dir>.'
    echo '  --overlay=<dir>'
    echo '    Find overlay source in directory <dir>.'
    echo ''
    echo "${progName} [--help | -h]"
    echo '  Display this message.'
    exit ${argError}
fi


#
# Main script
#

outDir="$("${progDir}/lib/out-dir-setup" "${outDirOpt[@]}")"
if (( $? != 0 )); then
    exit 1
fi

lintDir="${outDir}/linter"

"${progDir}/build" "${outDirOpt[@]}" "${overlayDirOpt[@]}" --linter || exit 1

"${lintDir}/node_modules/.bin/eslint" \
    --cache --cache-location "${lintDir}/cache" \
    --ignore-pattern "/$(basename "${outDir}")/" \
    --max-warnings 0 \
    -- "${args[@]}"
status="$?"

echo ''

if (( ${status} == 0 )); then
    echo 'No linter errors! Yay!'
else
    echo 'Linter errors. Alas.'
    exit "${status}"
fi
